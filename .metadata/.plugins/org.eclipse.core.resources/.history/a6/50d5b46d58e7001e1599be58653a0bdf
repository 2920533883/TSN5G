[General]
network = TrainTopology

*.switch3.macTable.forwardingTable = [{address:"0A-AA-00-00-00-01", interface:"eth2"}]
#*.server.ipv4.routingTable.routingFile = "server.mrt"
*.*.dstt.destAddress = "server"
*.*Ue[0..1].masterId = 0
*.*Ue[0..1].nrMacCellId = 1
*.*Ue[0..1].nrMasterId = 1
*.*Ue[2..3].masterId = 0
*.*Ue[2..3].nrMacCellId = 1
*.*Ue[2..3].nrMasterId = 2
*.*Ue[4..5].masterId = 0
*.*Ue[4..5].nrMacCellId = 1
*.*Ue[4..5].nrMasterId = 3
*.*Ue[6..7].masterId = 0
*.*Ue[6..7].nrMacCellId = 1
*.*Ue[6..7].nrMasterId = 4


############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = 0
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = 6

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.*Ue[*].cellularNic.numCarriers = 1
*.*Ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


#**.dynamicCellAssociation = true
#**.enableHandover = true

*.*Client*.numApps = 1
# qian yin
*.TCUClient*.app[*].typename = "UdpBasicApp"
*.TCUClient*.app[0].display-name = "video"
*.TCUClient*.app[*].destAddresses = "server"
*.TCUClient*.app[0].destPort = 1000
*.TCUClient*.app[0].localPort = 1000
*.TCUClient*.app[0].messageLength = 50B
*.TCUClient*.app[0].sendInterval = 10ms
*.TCUClient*.app[*].startTime = 100ms
*.TCUClient*.app[*].stopTime = 10s
# zhidong

*.BCUClient*.app[*].typename = "UdpBasicApp"
*.BCUClient*.app[0].display-name = "video"
*.BCUClient*.app[*].destAddresses = "server"
*.BCUClient*.app[0].destPort = 1001
*.BCUClient*.app[0].localPort = 1000
*.BCUClient*.app[0].messageLength = 46B
*.BCUClient*.app[0].sendInterval = 10ms
*.BCUClient*.app[*].startTime = 150ms
*.BCUClient*.app[*].stopTime = 10s

# dian chi

*.BCClient*.app[*].typename = "UdpBasicApp"
*.BCClient*.app[0].display-name = "besteffort"
*.BCClient*.app[*].destAddresses = "server"
*.BCClient*.app[0].destPort = 1001
*.BCClient*.app[0].localPort = 1000
*.BCClient*.app[0].messageLength = 36B
*.BCClient*.app[0].sendInterval = 200ms
*.BCClient*.app[*].startTime = 15ms
*.BCClient*.app[*].stopTime = 10s
# men kong
*.DCUClient*.app[*].typename = "UdpBasicApp"
*.DCUClient*.app[0].display-name = "video"
*.DCUClient*.app[*].destAddresses = "server"
*.DCUClient*.app[0].destPort = 1001
*.DCUClient*.app[0].localPort = 1000
*.DCUClient*.app[0].messageLength = 42B
*.DCUClient*.app[0].sendInterval = 500ms
*.DCUClient*.app[*].startTime = 0ms
*.DCUClient*.app[*].stopTime = 10s

*.HVACClient*.app[*].typename = "UdpBasicApp"
*.HVACClient*.app[0].display-name = "besteffort"
*.HVACClient*.app[*].destAddresses = "server"
*.HVACClient*.app[0].destPort = 1001
*.HVACClient*.app[0].localPort = 1000
*.HVACClient*.app[0].messageLength = 36B
*.HVACClient*.app[0].sendInterval = 200ms
*.HVACClient*.app[*].startTime = 10ms
*.HVACClient*.app[*].stopTime = 10s

# xian shi
*.PISClient*.app[*].typename = "UdpBasicApp"
*.PISClient*.app[0].display-name = "besteffort"
*.PISClient*.app[*].destAddresses = "server"
*.PISClient*.app[0].destPort = 1001
*.PISClient*.app[0].localPort = 1000
*.PISClient*.app[0].messageLength = 300B
*.PISClient*.app[0].sendInterval = 500ms
*.PISClient*.app[*].startTime = 0ms
*.PISClient*.app[*].stopTime = 10s

*.server.numApps = 2
*.server.app[*].typename = "UdpSink"
*.server.app[0].display-name = "besteffort"
*.server.app[1].display-name = "video"
*.server.app[0].localPort = 1000
*.server.app[1].localPort = 1001


*.*.hasOutgoingStreams = true
*.*.hasIncomingStreams = true
# client stream identification
*.*Client*.bridging.streamIdentifier.identifier.mapping = [{stream: "besteffort", packetFilter: expr(has(udp) && udp.destPort == 1000)},
															{stream: "video", packetFilter: expr(has(udp) && udp.destPort == 1001)}]

# client stream encoding
*.*Client*.bridging.streamCoder.encoder.mapping = [{stream: "besteffort", pcp: 0},
													{stream: "video", pcp: 4}]

*.server.bridging.streamIdentifier.identifier.mapping = [{stream: "besteffort", packetFilter: expr(has(udp) && udp.destPort == 1000)},
															{stream: "video", packetFilter: expr(has(udp) && udp.destPort == 1001)}]

*.server.bridging.streamCoder.encoder.mapping = [{stream: "besteffort", pcp: 0},
													{stream: "video", pcp: 4}]


*.switch*.bridging.streamIdentifier.identifier.mapping = [{stream: "besteffort", packetFilter: expr(has(udp) && udp.destPort == 1000)},
															{stream: "video", packetFilter: expr(has(udp) && udp.destPort == 1001)}]

*.switch*.bridging.streamCoder.encoder.mapping = [{stream: "besteffort", pcp: 0},
													{stream: "video", pcp: 4}]

*.switch*.bridging.streamCoder.decoder.mapping = [{pcp: 0, stream: "besteffort"},
                                                 {pcp: 4, stream: "video"}]

*.switch*.hasIngressTrafficFiltering = true
#*.switch*.bridging.interfaceRelay.typename = "Ieee8021dRelay"
*.switch*.bridging.streamFilter.ingress.typename = "SimpleIeee8021qFilter"
*.switch*.bridging.streamFilter.ingress.numStreams = 2
*.switch*.bridging.streamFilter.ingress.classifier.mapping = {besteffort: 0, video: 1}
*.switch*.bridging.streamFilter.ingress.*[0].display-name = "besteffort"
*.switch*.bridging.streamFilter.ingress.*[1].display-name = "video"
*.switch*.bridging.streamFilter.ingress.meter[0..1].typename = "EligibilityTimeMeter"
*.switch*.bridging.streamFilter.ingress.meter[*].committedInformationRate = 20Mbps
*.switch*.bridging.streamFilter.ingress.meter[*].committedBurstSize = 10kB
*.switch*.bridging.streamFilter.ingress.filter[0..1].typename = "EligibilityTimeFilter"



# enable egress traffic shaping
*.switch*.hasEgressTrafficShaping = true
#*.switch*.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

*.switch*.eth[*].macLayer.queue.numTrafficClasses = 2
*.switch*.eth[*].macLayer.queue.*[0].display-name = "besteffort"
*.switch*.eth[*].macLayer.queue.*[1].display-name = "video"
*.switch*.eth[*].macLayer.queue.queue[0..1].typename = "EligibilityTimeQueue"

*.switch*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[0..1].typename = "Ieee8021qAsynchronousShaper"

